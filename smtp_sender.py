#!/usr/bin/env python
'''SMTP sender'''
from __future__ import print_function
from optparse import OptionParser
from email.mime.base import MIMEBase
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email import utils
import smtplib
import os
import sys
import mimetypes




# shut up about constants pylint!
# pylint: disable-msg=C0103

def detect_filetype(fn, bodyFile=False):
    '''Detect mime type information about a file'''
    ct, enc = mimetypes.guess_type(fn)
    if ct is None and bodyFile:
        fdata = open(fn, 'rb').read()
        ct = 'text/html' if '<html>' in fdata else 'text/plain'
    else:
        if ct is None or enc is not None:
            ct = 'application/octet-stream'
    return ct.split('/', 1) # [maintype, subtype]


if __name__ == '__main__':
    parser = OptionParser(usage='%prog [options]')
    parser.add_option('-d', '--debug', dest='debug',
                      action='store_true', help='show debugging messages')
    parser.add_option('-s', '--subject', dest='subject', help='email subject [required]')
    parser.add_option('-f', '--from', dest='sender', help='email from address [required]')
    parser.add_option('-b', '--body', dest='body', help='email body')
    parser.add_option('-t', '--bodyfile', dest='bodyfile', help='email body from file')
    parser.add_option('-z', '--host', dest='host', help='SMTP host [required]')
    parser.add_option('-p', '--port', dest='port', type='int', help='SMTP port [required]')
    #parser.add_option('-e', '--base64', dest='b64', action='store_true',
    #                  help='Base64 encoding (default)')
    parser.add_option('-o', '--bodyencode', dest='bodyencode',
                      action='store_true', help='Use selected encoder to encode body content')
    parser.add_option('-r', '--recipients',
                      dest='recipients',
                      help='comma separated list of email recipients [required]')
    parser.add_option('-a', '--attachments',
                      dest='attachments',
                      help='comma separated list of email attachments')
    parser.add_option('-i', '--binary', dest='binary',
                      help='Dont detect attachment filetype, send binary')
    opts, args = parser.parse_args()



    msg = MIMEMultipart()
    msg['Message-ID'] = utils.make_msgid()
    try:
        recipients = opts.recipients.replace(' ', '').split(',')
        msg['Subject'] = opts.subject
        msg['from'] = opts.sender
        msg['To'] = ', '.join(recipients)
        host = opts.host
        port = int(opts.port)

    except (ValueError, NameError, IndexError, AttributeError, TypeError):
        print('Required options missing')
        print(parser.format_help())
        sys.exit(1)


    # giving myself the option to add other encoders later on if desired
    encoder = lambda x: x.encode('base64')
    encoder.__doc__ = 'base64'

    #charset = 'UTF-8'
    charset = 'us-ascii'
    
        


    if opts.bodyfile:
        if os.path.exists(opts.bodyfile):
            fd = open(opts.bodyfile, 'rb').read()
            maintype, subtype = detect_filetype(opts.bodyfile)
            needEncode = False
            try:
                tdata = fd.encode('ascii')
            except:
                needEncode = True
            if opts.bodyencode or needEncode:
                body = MIMEBase(maintype, subtype, charset=charset)
                body.set_payload(encoder(fd))
                body.add_header('Content-Transfer-Encoding', encoder.__doc__)
            else:
                body = MIMEText(tdata, _subtype=subtype, _charset=charset)
            msg.attach(body)
        else:
            print('Provided body file does not exist')
            sys.exit(1)
    elif opts.body:
        if opts.bodyencode:
            dd = 'text/html' if '<html>' in opts.body else 'text/plain'
            maintype, subtype = dd.split('/', 1)
            body = MIMEBase(maintype, subtype, charset=charset)
            body.set_payload(encoder(opts.body))
            body.add_header('Content-Transfer-Encoding', encoder.__doc__)
            msg.attach(body)
        else:
            msg.preamble = opts.body
    else:
        print('Provide either body text or body file')
        print(parser.format_help())
        sys.exit(1)


    if opts.attachments:
        # check for option to not detect filetype
        for filename in opts.attachments.replace(' ', '').split(','):
            attachment = MIMEBase('application', 'octet-stream', charset=charset)
            attachment.set_payload(open(filename, 'rb').read())
            attachment.add_header('Content-Transfer-Encoding', encoder.__doc__)
            #encoders.encode_base64(attachment)
            base_filename = filename.split(os.path.sep)[-1]
            attachment.add_header('Content-Disposition', 'attachment', filename=base_filename)
            msg.attach(attachment)


    smtpi = smtplib.SMTP(host, port)
    smtpi.sendmail(opts.sender, recipients, msg.as_string())
    smtpi.quit()
